dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/ag.c)

dnl automake requires this
AM_INIT_AUTOMAKE(opt, 3.7)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_RANLIB

dnl Checks for libraries.

dnl Checks for header files.  ..we don't actually use this, though
dnl AC_HEADER_STDC

dnl If system doesn't supply strdup, we'll supply our own
AC_CHECK_FUNCS(strdup)

testdir=test
AC_ARG_ENABLE(test,
	[  --disable-test          Quicker build],
        if test x$enableval = xno; then
           AC_MSG_RESULT([checking whether to build test routines ... no])
	   testdir="";
	else
	   testdir="test";
        fi;
)
AC_SUBST(testdir)

dnl Check for whether the menu can trap ^C
enablelongjmp=yes
AC_ARG_ENABLE(longjmp,
	[  --disable-longjmp       Prevent menu trapping],
        if test x$enableval = xno; then
           enablelongjmp=no;
           AC_MSG_RESULT([checking longjmp ... disabled])
           AC_DEFINE(HAVE_LONGJMP,0)
        fi;
)

if test x$enablelongjmp = xyes; then
           AC_CHECK_FUNCS(longjmp)
	   AC_CHECK_HEADER(signal.h,AC_DEFINE(HAVE_SIGNAL))
	   AC_TYPE_SIGNAL
fi;


dnl -----------------------------------------------
dnl Absurdly complicated check for readline library.
AC_ARG_WITH(readline,
	[  --with-readline         Compile in readline enhancements
  --with-readline=DIR     specifies where to find libreadline.a],
	echo with_readline=$with_readline;
	liblist="/usr/local/lib /usr/lib /packages/lib $with_readline";
	xrlo=;
	AC_CHECK_LIB(readline,main,
		for d in $liblist; do f=$d/libreadline.a; \
		    if test -f $f; then readline_PATH=$f; fi; done;
		echo readline_PATH=$readline_PATH;
		if test -f $readline_PATH; then xrlo=`ar t $readline_PATH`; fi;
		for o in $xrlo; do if test $o != __.SYMDEF; then\
			xxrlo=`echo $xxrlo $o`; fi; done
		xrlo="$xxrlo"; echo "xrlo=$xrlo"
	)
	xtco=;
	AC_CHECK_LIB(termcap,main,
		for d in $liblist; do f=$d/libtermcap.a; \
		    if test -f $f; then termcap_PATH=$f; fi; done;
		echo termcap_PATH=$termcap_PATH;
		if test -f $termcap_PATH; then xtco=`ar t $termcap_PATH`; fi;
		for o in $xtco; do if test $o != __.SYMDEF; then\
			xxtco=`echo $xxtco $o`; fi; done
		xtco="$xxtco"; echo "xtco=$xtco"
	)
	dnl if either $xrlo or $xtco are empty, then both should be empty
	dnl if test -z "$xrlo" -o -z "$xtco"; then xrlo=; xtco=; fi
	AC_CHECK_HEADER(readline/readline.h,
	AC_CHECK_HEADER(readline/history.h,
		if test -n "$xrlo"; then
		AC_DEFINE(HAVE_READLINE)
		fi,
		xrlo=; xtco=;
	))
)

AC_SUBST(xrlo)
AC_SUBST(readline_PATH)
AC_SUBST(xtco)
AC_SUBST(termcap_PATH)
dnl -----------------------------------------------

dnl permit user to specify flags as 0/1 instead of -/+
AC_ARG_ENABLE(flagonezero,
	[  --enable-flagonezero    Flags turned on/off with 1/0 rather than +/-],
        if test x$enableval = xyes; then 
	   AC_DEFINE(FLAG_ZERO_ONE)
        fi
)

dnl I would really rather use config.h, but this isn't working right!
dnl AM_CONFIG_HEADER(config.h)

AC_OUTPUT(test/Makefile src/Makefile ext/Makefile Makefile makeRPM opt-RPM.spec)








